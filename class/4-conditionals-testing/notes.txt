Planned outline:


FUNCTIONS PRACTICE

test_isFactor <- function() {
    cat('Testing isFactor()...')
    stopifnot(isFactor(2, 6) == TRUE)
    stopifnot(isFactor(6, 2) == FALSE)
    stopifnot(isFactor(0, 5) == TRUE)
    stopifnot(isFactor(5, 0) == FALSE)
    cat('Passed!')
}

isFactor <- function(f, n) {
    if (f == 0) { return(TRUE) }
    if (n == 0 ) { return(FALSE) }
    return(n %% f == 0)
}

test_isFactor()

test_isMultiple <- function() {
    cat('Testing isMultiple()...')
    stopifnot(isMultiple(2, 6) == FALSE)
    stopifnot(isMultiple(6, 2) == TRUE)
    stopifnot(isMultiple(0, 5) == FALSE)
    stopifnot(isMultiple(5, 0) == TRUE)
    cat('Passed!')
}

isMultiple <- function(m, n) {
    return(isFactor(n, m))
}

test_isMultiple()





test_getInRange <- function() {
    cat('Testing getInRange()...')
    stopifnot(getInRange(1, 3, 5) == 3)
    stopifnot(getInRange(4, 3, 5) == 4)
    stopifnot(getInRange(6, 3, 5) == 5)
    stopifnot(getInRange(6, 5, 3) == 5)
    cat('Passed!')
}

getInRange <- function(x, bound1, bound2) {
    lower <- min(bound1, bound2)
    upper <- max(bound1, bound2)
    if (x < lower) {
        return(lower)
    }
    if (x > upper) {
        return(upper)
    }
    return(x)
}

getInRange <- function(x, bound1, bound2) {
    lower <- min(bound1, bound2)
    upper <- max(bound1, bound2)
    return(min(max(x, lower), upper))
}

test_getInRange()


# ----------------------------------------------------------------------
# Post-class notes



